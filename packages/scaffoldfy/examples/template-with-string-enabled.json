{
  "$schema": "../schema/tasks.schema.json",
  "name": "string-enabled-example",
  "prompts": [
    {
      "id": "useTypeScript",
      "type": "confirm",
      "message": "Use TypeScript?",
      "default": true
    },
    {
      "id": "includeTests",
      "type": "confirm",
      "message": "Include tests?",
      "default": true
    },
    {
      "id": "testFramework",
      "type": "select",
      "message": "Select test framework:",
      "choices": [
        { "name": "Vitest", "value": "vitest" },
        { "name": "Jest", "value": "jest" }
      ],
      "enabled": "includeTests === true"
    }
  ],
  "tasks": [
    {
      "id": "setup-typescript",
      "name": "Setup TypeScript",
      "description": "Create TypeScript configuration",
      "enabled": "useTypeScript === true",
      "type": "create",
      "config": {
        "file": "tsconfig.json",
        "template": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"module\": \"ESNext\",\n    \"strict\": true\n  }\n}"
      }
    },
    {
      "id": "setup-vitest",
      "name": "Setup Vitest",
      "description": "Create Vitest configuration",
      "enabled": "includeTests === true && testFramework === 'vitest'",
      "type": "create",
      "config": {
        "file": "vitest.config.ts",
        "template": "import { defineConfig } from 'vitest/config';\n\nexport default defineConfig({});"
      }
    },
    {
      "id": "setup-jest",
      "name": "Setup Jest",
      "description": "Create Jest configuration",
      "enabled": "includeTests === true && testFramework === 'jest'",
      "type": "create",
      "config": {
        "file": "jest.config.js",
        "template": "module.exports = {};"
      }
    }
  ]
}
